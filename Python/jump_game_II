"""
Given an array of non-negative integers nums, you are initially positioned at the first index of the array.

Each element in the array represents your maximum jump length at that position.

Your goal is to reach the last index in the minimum number of jumps.

You can assume that you can always reach the last index.

"""

from queue import deque

class Solution:
    def jump(self, nums: List[int]) -> int:
        N = len(nums)
        visited = {}
        deq = deque([(0,nums[0],0)])
        
        while deq:
            index,limit,step = deq.popleft()
            
            if index == N-1:
                return step
            
            for x in range(min(index+limit,N-1),index,-1):
                    
                if (visited.get(x)):
                    continue
                    
                if (x==N-1):
                    return step+1
                
                deq.append([x,nums[x],step+1])
                visited[x] = True
        
        return -1
